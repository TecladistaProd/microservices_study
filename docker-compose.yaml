version: "3.8"
services:
  client_service:
    build: ./clientes
    volumes:
      - ./clientes/src:/app/src
      - ./clientes/prisma:/app/prisma
    environment:
      - DATABASE_URL=postgresql://admin:admin@postgresqls:5432/ms_client?schema=public
      - PORT=4000
    ports:
      - "4000:4000"
    networks:
      - default
    command: sh exec.sh
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgresqls
  order_service:
    build: ./pedidos
    volumes:
      - ./pedidos/src:/app/src
      - ./pedidos/prisma:/app/prisma
    environment:
      - DATABASE_URL=postgresql://admin:admin@postgresqls:5432/ms_order?schema=public
      - PORT=4001
    ports:
      - "4001:4001"
    networks:
      - default
    command: sh exec.sh
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgresqls
  product_service:
    build: ./produto
    volumes:
      - ./produto/src:/app/src
      - ./produto/prisma:/app/prisma
    environment:
      - DATABASE_URL=postgresql://admin:admin@postgresqls:5432/ms_product?schema=public
      - PORT=4002
    ports:
      - "4002:4002"
    networks:
      - default
    command: sh exec.sh
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgresqls
  postgresqls:
    container_name: "services_db"
    image: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - db_persdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ms_client
    networks:
      - default
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka1:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_INTERNAL://broker1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  kafka2:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - 9093:9092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092,PLAINTEXT_INTERNAL://broker2:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  kafka3:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - 9094:9092
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092,PLAINTEXT_INTERNAL://broker3:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  gateway:
    image: nginx
    ports:
      - 8000:8000
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
networks:
  default:
volumes:
  db_persdata: {}